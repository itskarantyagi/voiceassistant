import webbrowser
import pyttsx3
import time
import datetime
import speech_recognition as sr
import wikipedia
import os
import smtplib #for sending email
import subprocess

engine = pyttsx3.init('sapi5') #microsoft speech API
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[0].id)


def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("Good Morning!")

    elif hour>=12 and hour<17:
        speak("Good Afternoon!")

    else:
        speak("Good Evening!")

    speak("I am Steve. How may i help you?")


def takeCommand():
    '''
    This will take command from user via microphone
    '''
    print("Listening")
    r = sr.Recognizer()
    with sr.Microphone() as source:
        r.pause_threshold = 0.8
        audio = r.listen(source)


    try:
        query = r.recognize_google(audio, language="en-in")
        print(query)
        print(f"User said: {query}\n")
    except Exception as e:
        return "None"
    return query


if __name__ == "__main__":
    wishMe()
    while True:
        query = takeCommand().lower()
        if 'wikipedia' in query:
            speak('Searching Wikipedia')
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=4)
            speak("According to wikipedia")
            print(results)
            speak(results)

        elif 'open youtube' in query:
            webbrowser.open("www.youtube.com")

        elif 'song' in query:
            webbrowser.open('https://www.youtube.com/watch?v=uQ5zYwiEUrA')

        elif 'chat' in query:
            webbrowser.open("https://app.slack.com/")

        elif 'time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")
            speak(f"Time is {strTime}")

        elif 'stop' or 'exit' or 'shut up':
            speak("Suspending operations")
            exit()




